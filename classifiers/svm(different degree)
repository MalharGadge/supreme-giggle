from sklearn.model_selection import GridSearchCV

# Define the parameters to search
param_grid = {'degree': [2, 3, 4, 5]}  # Specify different degrees to try

# Initialize SVM classifier with polynomial kernel
svm_classifier_poly = SVC(kernel='poly')

# Initialize GridSearchCV with SVM classifier and parameter grid
grid_search = GridSearchCV(svm_classifier_poly, param_grid, cv=5, scoring='accuracy')

# Fit GridSearchCV to the training data
grid_search.fit(features_pca, labels)

# Get the best degree from the grid search results
best_degree = grid_search.best_params_['degree']
print("Best degree:", best_degree)

# Get the best SVM classifier with the best degree
best_svm_classifier = grid_search.best_estimator_

# Make predictions on the test data using the best classifier
predicted_labels = best_svm_classifier.predict(test_features_pca)

# Calculate accuracy
accuracy = np.mean(predicted_labels == test_labels)
print("Accuracy:", accuracy)
